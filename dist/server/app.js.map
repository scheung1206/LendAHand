{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;uBAEO,SAAS;;;;wBACR,UAAU;;;;iCAEZ,sBAAsB;;;;oBACxB,MAAM;;;;;;AAFvB,sBAAS,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAKvC,sBAAS,OAAO,CAAC,+BAAO,KAAK,CAAC,GAAG,EAAE,+BAAO,KAAK,CAAC,OAAO,CAAC,CAAC;AACzD,sBAAS,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AAC5C,SAAO,CAAC,KAAK,CAAC,4BAA4B,GAAG,GAAG,CAAC,CAAC;AAClD,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;CAClB,CAAC,CAAC;;;AAGH,IAAI,+BAAO,MAAM,EAAE;AAAE,SAAO,CAAC,eAAe,CAAC,CAAC;CAAE;;;AAGhD,IAAI,GAAG,GAAG,2BAAS,CAAC;AACpB,IAAI,MAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;AAC1C,aAAW,EAAE,+BAAO,GAAG,KAAK,YAAY;AACxC,MAAI,EAAE,mBAAmB;CAC1B,CAAC,CAAC;AACH,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC;AACvC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAGzB,SAAS,WAAW,GAAG;AACrB,KAAG,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,+BAAO,IAAI,EAAE,+BAAO,EAAE,EAAE,YAAW;AACtE,WAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,+BAAO,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;GACxF,CAAC,CAAC;CACJ;;AAED,YAAY,CAAC,WAAW,CAAC,CAAC;;;AAG1B,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"app.js","sourcesContent":["/**\r\n * Main application file\r\n */\r\n\r\n'use strict';\r\n\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nmongoose.Promise = require('bluebird');\r\nimport config from './config/environment';\r\nimport http from 'http';\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(config.mongo.uri, config.mongo.options);\r\nmongoose.connection.on('error', function(err) {\r\n  console.error('MongoDB connection error: ' + err);\r\n  process.exit(-1);\r\n});\r\n\r\n// Populate databases with sample data\r\nif (config.seedDB) { require('./config/seed'); }\r\n\r\n// Setup server\r\nvar app = express();\r\nvar server = http.createServer(app);\r\nvar socketio = require('socket.io')(server, {\r\n  serveClient: config.env !== 'production',\r\n  path: '/socket.io-client'\r\n});\r\nrequire('./config/socketio')(socketio);\r\nrequire('./config/express')(app);\r\nrequire('./routes')(app);\r\n\r\n// Start server\r\nfunction startServer() {\r\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\r\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\r\n  });\r\n}\r\n\r\nsetImmediate(startServer);\r\n\r\n// Expose app\r\nexports = module.exports = app;\r\n"]}