{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/**\r\n * Main application file\r\n */\r\n\r\n'use strict';\r\n\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nmongoose.Promise = require('bluebird');\r\nimport config from './config/environment';\r\nimport http from 'http';\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(config.mongo.uri, config.mongo.options);\r\nmongoose.connection.on('error', function(err) {\r\n  console.error('MongoDB connection error: ' + err);\r\n  process.exit(-1);\r\n});\r\n\r\n// Populate databases with sample data\r\nif (config.seedDB) { require('./config/seed'); }\r\n\r\n// Setup server\r\nvar app = express();\r\nvar server = http.createServer(app);\r\n// //Adding stuff for socketio chatroom\r\nvar io = require('socket.io').listen(server);\r\nvar users = [];\r\nvar connections = [];\r\n\r\n//server.listen(process.env.PORT || 9000);\r\nconsole.log('Server running....');\r\n\r\n// app.get('/', function(req, res){\r\n// \tres.sendFile(__dirname + '/chat.html');\r\n// });\r\n\r\n//SocketIo Configuration\r\nio.sockets.on('connection', function(socket){\r\n  connections.push(socket);\r\n  console.log('Connected: %s sockets connected', connections.length);\r\n\r\n  //Disconnect\r\n  \tsocket.on('disconnect', function(data){\r\n  \t\t//if(!socket.username) return;\r\n  \t\tusers.splice(users.indexOf(socket.username), 1);\r\n  \t\tupdateUsernames();\r\n  \t\tconnections.splice(connections.indexOf(socket), 1);\r\n    \tconsole.log('Disconnected: %s sockets connected', connections.length);\r\n  \t});\r\n\r\n   //Send Message\r\n    socket.on('send message', function(data){\r\n    \tconsole.log(data);\r\n      io.sockets.emit('new message', {msg: data, user: socket.username});\r\n    });\r\n\r\n    //New User\r\n    socket.on('new user', function(data, callback){\r\n    \tcallback(true);\r\n    \tsocket.username = data;\r\n    \tusers.push(socket.username);\r\n    \tupdateUsernames();\r\n    });\r\n\r\n    function updateUsernames(){\r\n    \tio.sockets.emit('get users', users);\r\n    }\r\n\r\n  });\r\n\r\n\r\n//Previous Code\r\n// var socketio = require('socket.io')(server, {\r\n//   serveClient: config.env !== 'production',\r\n//   path: '/socket.io-client'\r\n// });\r\n// require('./config/socketio')(socketio);\r\n\r\n\r\n\r\nrequire('./config/express')(app);\r\nrequire('./routes')(app);\r\n\r\n\r\n// Start server\r\nfunction startServer() {\r\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\r\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\r\n  });\r\n}\r\n\r\nsetImmediate(startServer);\r\n\r\n// Expose app\r\nexports = module.exports = app;\r\n"]}