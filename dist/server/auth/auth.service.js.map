{"version":3,"sources":["../../../server/auth/auth.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;wBAEQ,UAAU;;;;iCACZ,uBAAuB;;;;4BAC1B,cAAc;;;;0BACP,aAAa;;;;oCAChB,uBAAuB;;;;gCAC1B,wBAAwB;;;;AAEzC,IAAI,WAAW,GAAG,6BAAW;AAC3B,QAAM,EAAE,+BAAO,OAAO,CAAC,OAAO;CAC/B,CAAC,CAAC;;;;;;;AAMI,SAAS,eAAe,GAAG;AAChC,SAAO,wCAAS;;GAEb,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;AAE5B,QAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;AACzD,SAAG,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC;KAChE;AACD,eAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;GAC7B,CAAC;;GAED,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC5B,kCAAK,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAC7B,IAAI,CAAC,UAAA,IAAI,EAAI;AACZ,UAAI,CAAC,IAAI,EAAE;AACT,eAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;OAC9B;AACD,SAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,EAAE,CAAC;KACR,CAAC,SACI,CAAC,UAAA,GAAG;aAAI,IAAI,CAAC,GAAG,CAAC;KAAA,CAAC,CAAC;GAC5B,CAAC,CAAC;CACN;;;;;;AAKM,SAAS,OAAO,CAAC,YAAY,EAAE;AACpC,MAAI,CAAC,YAAY,EAAE;AACjB,UAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;GAClD;;AAED,SAAO,wCAAS,CACb,GAAG,CAAC,eAAe,EAAE,CAAC,CACtB,GAAG,CAAC,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC9C,QAAI,+BAAO,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IACvC,+BAAO,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;AAC1C,UAAI,EAAE,CAAC;KACR,MAAM;AACL,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACnC;GACF,CAAC,CAAC;CACN;;;;;;AAKM,SAAS,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE;AAClC,SAAO,0BAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,+BAAO,OAAO,CAAC,OAAO,EAAE;AAC/D,aAAS,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;GACvB,CAAC,CAAC;CACJ;;;;;;AAKM,SAAS,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACvC,MAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AACb,WAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;GACvF;AACD,MAAI,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,KAAG,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3B,KAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CACnB","file":"auth.service.js","sourcesContent":["'use strict';\r\n\r\nimport passport from 'passport';\r\nimport config from '../config/environment';\r\nimport jwt from 'jsonwebtoken';\r\nimport expressJwt from 'express-jwt';\r\nimport compose from 'composable-middleware';\r\nimport User from '../api/user/user.model';\r\n\r\nvar validateJwt = expressJwt({\r\n  secret: config.secrets.session\r\n});\r\n\r\n/**\r\n * Attaches the user object to the request if authenticated\r\n * Otherwise returns 403\r\n */\r\nexport function isAuthenticated() {\r\n  return compose()\r\n    // Validate jwt\r\n    .use(function(req, res, next) {\r\n      // allow access_token to be passed through query parameter as well\r\n      if (req.query && req.query.hasOwnProperty('access_token')) {\r\n        req.headers.authorization = 'Bearer ' + req.query.access_token;\r\n      }\r\n      validateJwt(req, res, next);\r\n    })\r\n    // Attach user to request\r\n    .use(function(req, res, next) {\r\n      User.findByIdAsync(req.user._id)\r\n        .then(user => {\r\n          if (!user) {\r\n            return res.status(401).end();\r\n          }\r\n          req.user = user;\r\n          next();\r\n        })\r\n        .catch(err => next(err));\r\n    });\r\n}\r\n\r\n/**\r\n * Checks if the user role meets the minimum requirements of the route\r\n */\r\nexport function hasRole(roleRequired) {\r\n  if (!roleRequired) {\r\n    throw new Error('Required role needs to be set');\r\n  }\r\n\r\n  return compose()\r\n    .use(isAuthenticated())\r\n    .use(function meetsRequirements(req, res, next) {\r\n      if (config.userRoles.indexOf(req.user.role) >=\r\n          config.userRoles.indexOf(roleRequired)) {\r\n        next();\r\n      } else {\r\n        res.status(403).send('Forbidden');\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Returns a jwt token signed by the app secret\r\n */\r\nexport function signToken(id, role) {\r\n  return jwt.sign({ _id: id, role: role }, config.secrets.session, {\r\n    expiresIn: 60 * 60 * 5\r\n  });\r\n}\r\n\r\n/**\r\n * Set token cookie directly for oAuth strategies\r\n */\r\nexport function setTokenCookie(req, res) {\r\n  if (!req.user) {\r\n    return res.status(404).send('It looks like you aren\\'t logged in, please try again.');\r\n  }\r\n  var token = signToken(req.user._id, req.user.role);\r\n  res.cookie('token', token);\r\n  res.redirect('/');\r\n}\r\n"]}