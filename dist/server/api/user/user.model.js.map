{"version":3,"sources":["../../../../server/api/user/user.model.js"],"names":[],"mappings":"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","file":"user.model.js","sourcesContent":["'use strict';\r\n\r\nimport crypto from 'crypto';\r\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\r\nimport {Schema} from 'mongoose';\r\n\r\nconst authTypes = ['github', 'twitter', 'facebook', 'google'];\r\n\r\nvar UserSchema = new Schema({\r\n  reviews: [{\r\n      rating:{\r\n      type: Number,\r\n      default: 5\r\n      },\r\n      content: String,\r\n      user: {\r\n        type: mongoose.Schema.ObjectId,\r\n        ref: 'User'\r\n      },\r\n      createdAt: {\r\n      type: Date,\r\n      default: Date.now,\r\n    },\r\n      likes: [{\r\n        type: mongoose.Schema.ObjectId,\r\n        ref: 'User'\r\n      }],\r\n      reports: [{\r\n            type: mongoose.Schema.ObjectId,\r\n            ref: 'User'\r\n        }],\r\n}],\r\n  name: String,\r\n  email: {\r\n    type: String,\r\n    lowercase: true\r\n  },\r\n  role: {\r\n    type: String,\r\n    default: 'user'\r\n  },\r\n  password: String,\r\n  background: {\r\n    image: String,\r\n    hobbies: String,\r\n    biography: {\r\n      type: String,\r\n      default: 'My Biography',\r\n    },\r\n    location: {\r\n      type: String,\r\n      default: 'My Location',\r\n    },\r\n    skills: [{\r\n      text:String,\r\n    }],\r\n},\r\n  provider: String,\r\n  salt: String,\r\n  accesstoken: String,\r\n  facebook: {},\r\n  github: {}\r\n});\r\n\r\n/**\r\n * Virtuals\r\n */\r\n\r\n// Public profile information\r\nUserSchema\r\n  .virtual('profile')\r\n  .get(function() {\r\n    return {\r\n      '_id': this._id,\r\n      'name': this.name,\r\n      'role': this.role,\r\n      'email': this.email,\r\n      'background': this.background,\r\n      'reviews': this.reviews\r\n    };\r\n  });\r\n\r\n// Non-sensitive info we'll be putting in the token\r\nUserSchema\r\n  .virtual('token')\r\n  .get(function() {\r\n    return {\r\n      '_id': this._id,\r\n      'role': this.role\r\n    };\r\n  });\r\n\r\n/**\r\n * Validations\r\n */\r\n\r\n// Validate empty email\r\nUserSchema\r\n  .path('email')\r\n  .validate(function(email) {\r\n    if (authTypes.indexOf(this.provider) !== -1) {\r\n      return true;\r\n    }\r\n    return email.length;\r\n  }, 'Email cannot be blank');\r\n\r\n// Validate empty password\r\nUserSchema\r\n  .path('password')\r\n  .validate(function(password) {\r\n    if (authTypes.indexOf(this.provider) !== -1) {\r\n      return true;\r\n    }\r\n    return password.length;\r\n  }, 'Password cannot be blank');\r\n\r\n// Validate email is not taken\r\nUserSchema\r\n  .path('email')\r\n  .validate(function(value, respond) {\r\n    var self = this;\r\n    return this.constructor.findOneAsync({ email: value })\r\n      .then(function(user) {\r\n        if (user) {\r\n          if (self.id === user.id) {\r\n            return respond(true);\r\n          }\r\n          return respond(false);\r\n        }\r\n        return respond(true);\r\n      })\r\n      .catch(function(err) {\r\n        throw err;\r\n      });\r\n  }, 'The specified email address is already in use.');\r\n\r\nvar validatePresenceOf = function(value) {\r\n  return value && value.length;\r\n};\r\n\r\n/**\r\n * Pre-save hook\r\n */\r\n UserSchema.pre('findOne', function(next){\r\n  this.populate('user');\r\n  this.populate('reviews.user', 'name');\r\n  next();\r\n});\r\n\r\nUserSchema\r\n  .pre('save', function(next) {\r\n    // Handle new/update passwords\r\n    if (!this.isModified('password')) {\r\n      return next();\r\n    }\r\n\r\n    if (!validatePresenceOf(this.password) && authTypes.indexOf(this.provider) === -1) {\r\n      next(new Error('Invalid password'));\r\n    }\r\n\r\n    // Make salt with a callback\r\n    this.makeSalt((saltErr, salt) => {\r\n      if (saltErr) {\r\n        next(saltErr);\r\n      }\r\n      this.salt = salt;\r\n      this.encryptPassword(this.password, (encryptErr, hashedPassword) => {\r\n        if (encryptErr) {\r\n          next(encryptErr);\r\n        }\r\n        this.password = hashedPassword;\r\n        next();\r\n      });\r\n    });\r\n  });\r\n\r\n/**\r\n * Methods\r\n */\r\nUserSchema.methods = {\r\n  /**\r\n   * Authenticate - check if the passwords are the same\r\n   *\r\n   * @param {String} password\r\n   * @param {Function} callback\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n  authenticate(password, callback) {\r\n    if (!callback) {\r\n      return this.password === this.encryptPassword(password);\r\n    }\r\n\r\n    this.encryptPassword(password, (err, pwdGen) => {\r\n      if (err) {\r\n        return callback(err);\r\n      }\r\n\r\n      if (this.password === pwdGen) {\r\n        callback(null, true);\r\n      } else {\r\n        callback(null, false);\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Make salt\r\n   *\r\n   * @param {Number} byteSize Optional salt byte size, default to 16\r\n   * @param {Function} callback\r\n   * @return {String}\r\n   * @api public\r\n   */\r\n  makeSalt(byteSize, callback) {\r\n    var defaultByteSize = 16;\r\n\r\n    if (typeof arguments[0] === 'function') {\r\n      callback = arguments[0];\r\n      byteSize = defaultByteSize;\r\n    } else if (typeof arguments[1] === 'function') {\r\n      callback = arguments[1];\r\n    }\r\n\r\n    if (!byteSize) {\r\n      byteSize = defaultByteSize;\r\n    }\r\n\r\n    if (!callback) {\r\n      return crypto.randomBytes(byteSize).toString('base64');\r\n    }\r\n\r\n    return crypto.randomBytes(byteSize, (err, salt) => {\r\n      if (err) {\r\n        callback(err);\r\n      } else {\r\n        callback(null, salt.toString('base64'));\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Encrypt password\r\n   *\r\n   * @param {String} password\r\n   * @param {Function} callback\r\n   * @return {String}\r\n   * @api public\r\n   */\r\n  encryptPassword(password, callback) {\r\n    if (!password || !this.salt) {\r\n      return null;\r\n    }\r\n\r\n    var defaultIterations = 10000;\r\n    var defaultKeyLength = 64;\r\n    var salt = new Buffer(this.salt, 'base64');\r\n\r\n    if (!callback) {\r\n      return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\r\n                   .toString('base64');\r\n    }\r\n\r\n    return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength, (err, key) => {\r\n      if (err) {\r\n        callback(err);\r\n      } else {\r\n        callback(null, key.toString('base64'));\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n"]}