{"version":3,"sources":["../../../../server/api/thing/thing.integration.js"],"names":[],"mappings":"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","file":"thing.integration.js","sourcesContent":["'use strict';\r\n\r\nvar app = require('../..');\r\nimport request from 'supertest';\r\n\r\nvar newThing;\r\n\r\ndescribe('Thing API:', function() {\r\n\r\n  describe('GET /api/things', function() {\r\n    var things;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .get('/api/things')\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          things = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with JSON array', function() {\r\n      things.should.be.instanceOf(Array);\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST /api/things', function() {\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .post('/api/things')\r\n        .send({\r\n          name: 'New Thing',\r\n          info: 'This is the brand new thing!!!'\r\n        })\r\n        .expect(201)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          newThing = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with the newly created thing', function() {\r\n      newThing.name.should.equal('New Thing');\r\n      newThing.info.should.equal('This is the brand new thing!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('GET /api/things/:id', function() {\r\n    var thing;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .get('/api/things/' + newThing._id)\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          thing = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    afterEach(function() {\r\n      thing = {};\r\n    });\r\n\r\n    it('should respond with the requested thing', function() {\r\n      thing.name.should.equal('New Thing');\r\n      thing.info.should.equal('This is the brand new thing!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT /api/things/:id', function() {\r\n    var updatedThing;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .put('/api/things/' + newThing._id)\r\n        .send({\r\n          name: 'Updated Thing',\r\n          info: 'This is the updated thing!!!'\r\n        })\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end(function(err, res) {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          updatedThing = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    afterEach(function() {\r\n      updatedThing = {};\r\n    });\r\n\r\n    it('should respond with the updated thing', function() {\r\n      updatedThing.name.should.equal('Updated Thing');\r\n      updatedThing.info.should.equal('This is the updated thing!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('DELETE /api/things/:id', function() {\r\n\r\n    it('should respond with 204 on successful removal', function(done) {\r\n      request(app)\r\n        .delete('/api/things/' + newThing._id)\r\n        .expect(204)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with 404 when thing does not exist', function(done) {\r\n      request(app)\r\n        .delete('/api/things/' + newThing._id)\r\n        .expect(404)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done();\r\n        });\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"]}