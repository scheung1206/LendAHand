{"version":3,"sources":["../../../../server/api/post/post.integration.js"],"names":[],"mappings":"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","file":"post.integration.js","sourcesContent":["'use strict';\r\n\r\nvar app = require('../..');\r\nimport request from 'supertest';\r\nvar User = require('../user/user.model');\r\n\r\nvar newPost;\r\n\r\ndescribe('Post API:', function() {\r\n  var user;\r\n  before(function() {\r\n    return User.removeAsync().then(function() {\r\n      user = new User({\r\n        name: 'Fake User',\r\n        email: 'test@test.com',\r\n        password: 'password'\r\n      });\r\n\r\n      return user.saveAsync();\r\n    });\r\n  });\r\n\r\n  var token;\r\n  before(function(done) {\r\n    request(app)\r\n      .post('/auth/local')\r\n      .send({\r\n        email: 'test@test.com',\r\n        password: 'password'\r\n      })\r\n      .expect(200)\r\n      .expect('Content-Type', /json/)\r\n      .end(function(err, res) {\r\n        token = res.body.token;\r\n        done();\r\n      });\r\n  });\r\n\r\n  describe('GET /api/posts', function() {\r\n    var posts;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .get('/api/posts')\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          posts = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with JSON array', function() {\r\n      posts.should.be.instanceOf(Array);\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST /api/posts', function() {\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .post('/api/posts')\r\n        .set('authorization', 'Bearer ' + token)\r\n        .send({\r\n          title: 'New Post',\r\n          description: 'This is the brand new post!!!'\r\n        })\r\n        .expect(201)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          newPost = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with the newly created post', function() {\r\n      newPost.title.should.equal('New Post');\r\n      newPost.description.should.equal('This is the brand new post!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('GET /api/posts/:id', function() {\r\n    var post;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .get('/api/posts/' + newPost._id)\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          post = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    afterEach(function() {\r\n      post = {};\r\n    });\r\n\r\n    it('should respond with the requested post', function() {\r\n      post.title.should.equal('New Post');\r\n      post.description.should.equal('This is the brand new post!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT /api/posts/:id', function() {\r\n    var updatedPost;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .put('/api/posts/' + newPost._id)\r\n        .set('authorization', 'Bearer ' + token)\r\n        .send({\r\n          title: 'Updated Post',\r\n          description: 'This is the updated post!!!'\r\n        })\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end(function(err, res) {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          updatedPost = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    afterEach(function() {\r\n      updatedPost = {};\r\n    });\r\n\r\n    it('should respond with the updated post', function() {\r\n      updatedPost.title.should.equal('Updated Post');\r\n      updatedPost.description.should.equal('This is the updated post!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('DELETE /api/posts/:id', function() {\r\n\r\n    it('should respond with 204 on successful removal', function(done) {\r\n      request(app)\r\n        .delete('/api/posts/' + newPost._id)\r\n        .set('authorization', 'Bearer ' + token)\r\n        .expect(204)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with 404 when post does not exist', function(done) {\r\n      request(app)\r\n        .delete('/api/posts/' + newPost._id)\r\n        .set('authorization', 'Bearer ' + token)\r\n        .expect(404)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done();\r\n        });\r\n    });\r\n\r\n  });\r\n\r\n  /* describe('PUT /api/things/:id', function() {\r\n    }); */\r\n\r\n});\r\n"]}