{"version":3,"sources":["../../../../server/api/user/user.model.spec.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;gBAEG,OAAO;;;;yBACN,cAAc;;;;AAC/B,IAAI,IAAI,CAAC;AACT,IAAI,OAAO,GAAG,SAAV,OAAO,GAAc;AACvB,MAAI,GAAG,2BAAS;AACd,YAAQ,EAAE,OAAO;AACjB,QAAI,EAAE,WAAW;AACjB,SAAK,EAAE,kBAAkB;AACzB,YAAQ,EAAE,UAAU;GACrB,CAAC,CAAC;AACH,SAAO,IAAI,CAAC;CACb,CAAC;;AAEF,QAAQ,CAAC,YAAY,EAAE,YAAW;AAChC,QAAM,CAAC,YAAW;;AAEhB,WAAO,uBAAK,WAAW,EAAE,CAAC;GAC3B,CAAC,CAAC;;AAEH,YAAU,CAAC,YAAW;AACpB,WAAO,EAAE,CAAC;GACX,CAAC,CAAC;;AAEH,WAAS,CAAC,YAAW;AACnB,WAAO,uBAAK,WAAW,EAAE,CAAC;GAC3B,CAAC,CAAC;;AAEH,IAAE,CAAC,4BAA4B,EAAE,YAAW;AAC1C,WAAO,uBAAK,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,CAC7B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;GAC9B,CAAC,CAAC;;AAEH,IAAE,CAAC,0CAA0C,EAAE,YAAW;AACxD,WAAO,IAAI,CAAC,SAAS,EAAE,CACpB,IAAI,CAAC,YAAW;AACf,UAAI,OAAO,GAAG,OAAO,EAAE,CAAC;AACxB,aAAO,OAAO,CAAC,SAAS,EAAE,CAAC;KAC5B,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;GACzB,CAAC,CAAC;;AAEH,UAAQ,CAAC,QAAQ,EAAE,YAAW;AAC5B,MAAE,CAAC,0CAA0C,EAAE,YAAW;AACxD,UAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;KAC5C,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,WAAW,EAAE,YAAW;AAC/B,cAAU,CAAC,YAAW;AACpB,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KACzB,CAAC,CAAC;;AAEH,MAAE,CAAC,mCAAmC,EAAE,YAAW;AACjD,UAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,QAAK,CAAC;KAC9C,CAAC,CAAC;;AAEH,MAAE,CAAC,yCAAyC,EAAE,YAAW;AACvD,UAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,QAAK,CAAC;KAC9C,CAAC,CAAC;;AAEH,MAAE,CAAC,4DAA4D,EAAE,YAAW;AAC1E,UAAI,CAAC,IAAI,GAAG,WAAW,CAAC;AACxB,aAAO,IAAI,CAAC,SAAS,EAAE,CACpB,MAAM,CAAC,UAAS,CAAC,EAAE;AAClB,eAAO,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;OACnC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,QAAK,CAAC;KAChC,CAAC,CAAC;GACJ,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"user.model.spec.js","sourcesContent":["'use strict';\r\n\r\nimport app from '../..';\r\nimport User from './user.model';\r\nvar user;\r\nvar genUser = function() {\r\n  user = new User({\r\n    provider: 'local',\r\n    name: 'Fake User',\r\n    email: 'test@example.com',\r\n    password: 'password'\r\n  });\r\n  return user;\r\n};\r\n\r\ndescribe('User Model', function() {\r\n  before(function() {\r\n    // Clear users before testing\r\n    return User.removeAsync();\r\n  });\r\n\r\n  beforeEach(function() {\r\n    genUser();\r\n  });\r\n\r\n  afterEach(function() {\r\n    return User.removeAsync();\r\n  });\r\n\r\n  it('should begin with no users', function() {\r\n    return User.findAsync({}).should\r\n      .eventually.have.length(0);\r\n  });\r\n\r\n  it('should fail when saving a duplicate user', function() {\r\n    return user.saveAsync()\r\n      .then(function() {\r\n        var userDup = genUser();\r\n        return userDup.saveAsync();\r\n      }).should.be.rejected;\r\n  });\r\n\r\n  describe('#email', function() {\r\n    it('should fail when saving without an email', function() {\r\n      user.email = '';\r\n      return user.saveAsync().should.be.rejected;\r\n    });\r\n  });\r\n\r\n  describe('#password', function() {\r\n    beforeEach(function() {\r\n      return user.saveAsync();\r\n    });\r\n\r\n    it('should authenticate user if valid', function() {\r\n      user.authenticate('password').should.be.true;\r\n    });\r\n\r\n    it('should not authenticate user if invalid', function() {\r\n      user.authenticate('blah').should.not.be.true;\r\n    });\r\n\r\n    it('should remain the same hash unless the password is updated', function() {\r\n      user.name = 'Test User';\r\n      return user.saveAsync()\r\n        .spread(function(u) {\r\n          return u.authenticate('password');\r\n        }).should.eventually.be.true;\r\n    });\r\n  });\r\n\r\n});\r\n"]}